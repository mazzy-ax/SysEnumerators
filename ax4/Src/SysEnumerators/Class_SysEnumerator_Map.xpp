//
// mazzy, https://github.com/mazzy-ax/SysEnumerators
//
public class SysEnumerator_Map extends xSysEnumerator
{
    Map base;
    MapEnumerator baseEnumerator;

    public Map base()
    {
        return base;
    }

    public MapEnumerator baseEnumerator()
    {
        return baseEnumerator;
    }

    protected Map baseOrDefault(Map _base = null)
    {
        if( _base == null )
        {
            _base = new Map(Types::Integer, Types::Integer);
        }

        return _base;
    }

    protected boolean begin()
    {
        boolean ret = super() && this.next();

        return ret;
    }

    public anytype current()
    {
        anytype ret = baseEnumerator.current();

        return ret;
    }

    public anytype currentIdx()
    {
        return this.current();
    }

    public anytype currentKey()
    {
        anytype ret = baseEnumerator.currentKey();

        return ret;
    }

    protected boolean currentKeyProvided()
    {
        return true;
    }

    public anytype currentValue()
    {
        anytype ret = baseEnumerator.currentValue();

        return ret;
    }

    protected boolean currentValueProvided()
    {
        return true;
    }

    public int64 estimatedIterations(int64 estimatedIterations = -1)
    {
        int64 ret = this.base().elements();

        return ret;
    }

    public void new(Map _base = null)
    {
        base = this.baseOrDefault(_base);
        baseEnumerator = base.getEnumerator();
        super();
    }

    protected boolean next()
    {
        boolean ret = super() && baseEnumerator.moveNext();

        return ret;
    }

    public void reset()
    {
        baseEnumerator.reset();
        super();
    }

    public static SysEnumerator_Map construct(Map base = null)
    {
        SysEnumerator_Map enumerator = new SysEnumerator_Map(base);

        return enumerator;
    }
}
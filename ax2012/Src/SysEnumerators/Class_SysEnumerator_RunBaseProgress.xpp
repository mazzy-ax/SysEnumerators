//
// mazzy, https://github.com/mazzy-ax/SysEnumerators
//
public class SysEnumerator_RunBaseProgress extends SysEnumerator_Indexed64
{
    #AviFiles

    RunbaseProgress base;

    public RunbaseProgress base()
    {
        return base;
    }

    protected RunbaseProgress baseOrDefault( RunbaseProgress _base = null
                                           , Caption caption = ''
                                           , int64 total = 0
                                           , Filename animation = #AviStopwatch
                                           )

    {
        if( _base == null )
        {
            _base = RunbaseProgress::construct(1);
            _base.setCaption(caption);
            _base.setTotal(total);
            _base.setAnimation(animation);
        }

        return _base;
    }

    protected boolean begin()
    {
        boolean ret = super() && this.next();

        return ret;
    }

    public int64 current()
    {
        return this.currentIdx();
    }

    public int64 currentKey()
    {
        return this.currentIdx();
    }

    public int64 currentValue()
    {
        return this.currentIdx();
    }

    public int64 estimatedIterations(int64 estimatedIterations = -1)
    {
        int64 ret;

        if( estimatedIterations >= 0 )
        {
            this.base().setTotal(estimatedIterations);
        }

        ret = this.base().getTotal();

        if( ret == 0 )
        {
            ret = super();
        }

        return ret;
    }

    public boolean moveNext()
    {
        boolean ret = super();

        if( !ret )
        {
            this.base().reset(); // hide progress
        }

        return ret;
    }

    public void new( RunbaseProgress _base = null
                   , Caption caption = ''
                   , int64 total = 0
                   , Filename animation = #AviStopwatch
                   )
    {
        base = this.baseOrDefault(_base, caption, total, animation);
        super();
    }

    protected boolean next()
    {
        boolean ret = super();

        if( ret )
        {
            this.base().incCount();
        }

        return ret;
    }

    public void reset()
    {
        this.base().reset();
        super();
    }

    public anytype xCurrent()
    {
        return this.current();
    }

    public anytype xCurrentKey()
    {
        return this.currentKey();
    }

    public anytype xCurrentValue()
    {
        return this.currentValue();
    }

    public static SysEnumerator_RunBaseProgress construct( RunbaseProgress base = null
                                                         , Caption   caption    = ''
                                                         , int64     total      = 0
                                                         , Filename  animation  = #AviStopwatch
                                                         )
    {
        SysEnumerator_RunBaseProgress enumerator = new SysEnumerator_RunBaseProgress(base, caption, total, animation);

        return enumerator;
    }

    public static SysEnumerator_RunBaseProgress newFromRunBase( Runbase   runbase    = null
                                                              , Caption   caption    = ''
                                                              , int64     total      = 0
                                                              , Filename  animation  = #AviStopwatch
                                                              )
    {
        RunbaseProgress progress;
        SysEnumerator_RunBaseProgress enumerator;

        if( runbase )
        {
            if( !caption )
            {
                caption = runbase.caption();
            }

            runbase.progressInit(caption, total, animation);
            progress = runbase.parmProgress();
        }

        enumerator = SysEnumerator_RunBaseProgress::construct(progress, caption, total, animation);
        return enumerator;
    }

    public static SysEnumerator_RunBaseProgress newGeneral( Filename    animation = #AviStopwatch
                                                          , Caption     caption = ''
                                                          , int64       total = 0
                                                          )
    {
        SysEnumerator_RunBaseProgress enumerator = SysEnumerator_RunBaseProgress::construct(null, caption, total, animation);

        return enumerator;
    }
}